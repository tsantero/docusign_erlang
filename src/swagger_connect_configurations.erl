-module(swagger_connect_configurations).

-export([encode/1]).

-export_type([swagger_connect_configurations/0]).

-type swagger_connect_configurations() ::
    #{ 'allowEnvelopePublish' => binary(),
       'allowSalesforcePublish' => binary(),
       'allUsers' => binary(),
       'configurationType' => binary(),
       'connectId' => binary(),
       'enableLog' => binary(),
       'envelopeEvents' => list(),
       'externalFolderId' => binary(),
       'externalFolderLabel' => binary(),
       'includeCertificateOfCompletion' => binary(),
       'includeCertSoapHeader' => binary(),
       'includeDocumentFields' => binary(),
       'includeDocuments' => binary(),
       'includeEnvelopeVoidReason' => binary(),
       'includeHMAC' => binary(),
       'includeSenderAccountasCustomField' => binary(),
       'includeTimeZoneInformation' => binary(),
       'name' => binary(),
       'password' => binary(),
       'recipientEvents' => list(),
       'requireMutualTls' => binary(),
       'requiresAcknowledgement' => binary(),
       'salesforceAccessToken' => binary(),
       'salesforceApiVersion' => binary(),
       'salesforceDocumentsAsContentFiles' => binary(),
       'salesforceRefreshToken' => binary(),
       'senderOverride' => binary(),
       'senderSelectableItems' => list(),
       'sfObjects' => list(),
       'signMessageWithX509Certificate' => binary(),
       'soapNamespace' => binary(),
       'urlToPublishTo' => binary(),
       'userIds' => list(),
       'userName' => binary(),
       'useSoapInterface' => binary()
     }.

encode(#{ 'allowEnvelopePublish' := AllowEnvelopePublish,
          'allowSalesforcePublish' := AllowSalesforcePublish,
          'allUsers' := AllUsers,
          'configurationType' := ConfigurationType,
          'connectId' := ConnectId,
          'enableLog' := EnableLog,
          'envelopeEvents' := EnvelopeEvents,
          'externalFolderId' := ExternalFolderId,
          'externalFolderLabel' := ExternalFolderLabel,
          'includeCertificateOfCompletion' := IncludeCertificateOfCompletion,
          'includeCertSoapHeader' := IncludeCertSoapHeader,
          'includeDocumentFields' := IncludeDocumentFields,
          'includeDocuments' := IncludeDocuments,
          'includeEnvelopeVoidReason' := IncludeEnvelopeVoidReason,
          'includeHMAC' := IncludeHMAC,
          'includeSenderAccountasCustomField' := IncludeSenderAccountasCustomField,
          'includeTimeZoneInformation' := IncludeTimeZoneInformation,
          'name' := Name,
          'password' := Password,
          'recipientEvents' := RecipientEvents,
          'requireMutualTls' := RequireMutualTls,
          'requiresAcknowledgement' := RequiresAcknowledgement,
          'salesforceAccessToken' := SalesforceAccessToken,
          'salesforceApiVersion' := SalesforceApiVersion,
          'salesforceDocumentsAsContentFiles' := SalesforceDocumentsAsContentFiles,
          'salesforceRefreshToken' := SalesforceRefreshToken,
          'senderOverride' := SenderOverride,
          'senderSelectableItems' := SenderSelectableItems,
          'sfObjects' := SfObjects,
          'signMessageWithX509Certificate' := SignMessageWithX509Certificate,
          'soapNamespace' := SoapNamespace,
          'urlToPublishTo' := UrlToPublishTo,
          'userIds' := UserIds,
          'userName' := UserName,
          'useSoapInterface' := UseSoapInterface
        }) ->
    #{ 'allowEnvelopePublish' => AllowEnvelopePublish,
       'allowSalesforcePublish' => AllowSalesforcePublish,
       'allUsers' => AllUsers,
       'configurationType' => ConfigurationType,
       'connectId' => ConnectId,
       'enableLog' => EnableLog,
       'envelopeEvents' => EnvelopeEvents,
       'externalFolderId' => ExternalFolderId,
       'externalFolderLabel' => ExternalFolderLabel,
       'includeCertificateOfCompletion' => IncludeCertificateOfCompletion,
       'includeCertSoapHeader' => IncludeCertSoapHeader,
       'includeDocumentFields' => IncludeDocumentFields,
       'includeDocuments' => IncludeDocuments,
       'includeEnvelopeVoidReason' => IncludeEnvelopeVoidReason,
       'includeHMAC' => IncludeHMAC,
       'includeSenderAccountasCustomField' => IncludeSenderAccountasCustomField,
       'includeTimeZoneInformation' => IncludeTimeZoneInformation,
       'name' => Name,
       'password' => Password,
       'recipientEvents' => RecipientEvents,
       'requireMutualTls' => RequireMutualTls,
       'requiresAcknowledgement' => RequiresAcknowledgement,
       'salesforceAccessToken' => SalesforceAccessToken,
       'salesforceApiVersion' => SalesforceApiVersion,
       'salesforceDocumentsAsContentFiles' => SalesforceDocumentsAsContentFiles,
       'salesforceRefreshToken' => SalesforceRefreshToken,
       'senderOverride' => SenderOverride,
       'senderSelectableItems' => SenderSelectableItems,
       'sfObjects' => SfObjects,
       'signMessageWithX509Certificate' => SignMessageWithX509Certificate,
       'soapNamespace' => SoapNamespace,
       'urlToPublishTo' => UrlToPublishTo,
       'userIds' => UserIds,
       'userName' => UserName,
       'useSoapInterface' => UseSoapInterface
     }.
